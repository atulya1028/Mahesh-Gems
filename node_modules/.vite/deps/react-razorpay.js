import {
  __commonJS,
  require_react
} from "./chunk-WXTH2UMW.js";

// node_modules/react-razorpay/dist/razorpay.js
var require_razorpay = __commonJS({
  "node_modules/react-razorpay/dist/razorpay.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Razorpay = class {
      constructor(options) {
        this.instance = void 0;
        this.options = options;
        if (typeof window !== "undefined")
          this.instance = new window.Razorpay(this.options);
      }
      on(event, cb) {
        if (!this.instance)
          throw new Error(`Razorpay Instance in not ready`);
        this.instance.on(event, cb);
      }
      open() {
        if (!this.instance)
          throw new Error(`Razorpay Instance in not ready`);
        this.instance.open();
      }
    };
    exports.default = Razorpay;
  }
});

// node_modules/react-razorpay/dist/index.js
var require_dist = __commonJS({
  "node_modules/react-razorpay/dist/index.js"(exports) {
    var __createBinding = exports && exports.__createBinding || (Object.create ? function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      var desc = Object.getOwnPropertyDescriptor(m, k);
      if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
        desc = { enumerable: true, get: function() {
          return m[k];
        } };
      }
      Object.defineProperty(o, k2, desc);
    } : function(o, m, k, k2) {
      if (k2 === void 0) k2 = k;
      o[k2] = m[k];
    });
    var __setModuleDefault = exports && exports.__setModuleDefault || (Object.create ? function(o, v) {
      Object.defineProperty(o, "default", { enumerable: true, value: v });
    } : function(o, v) {
      o["default"] = v;
    });
    var __importStar = exports && exports.__importStar || function(mod) {
      if (mod && mod.__esModule) return mod;
      var result = {};
      if (mod != null) {
        for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
      }
      __setModuleDefault(result, mod);
      return result;
    };
    var __importDefault = exports && exports.__importDefault || function(mod) {
      return mod && mod.__esModule ? mod : { "default": mod };
    };
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.useRazorpay = void 0;
    var React = __importStar(require_react());
    var razorpay_1 = __importDefault(require_razorpay());
    var NODE_ENV = "development";
    var logger = (message, ...args) => {
      if (NODE_ENV === "prod" || NODE_ENV === "production")
        return;
      console.log(`[react-razorpay]:`, message, ...args);
    };
    var useRazorpay = () => {
      const [isLoading, setIsLoading] = React.useState(false);
      const [error, setError] = React.useState();
      const isClient = typeof window !== "undefined";
      const checkScriptLoaded = () => {
        if (!isClient)
          return false;
        if (!("Razorpay" in window))
          return false;
        return true;
      };
      function loadScript(src) {
        return new Promise((resolve, reject) => {
          const script = window.document.createElement("script");
          script.src = src;
          script.onload = function() {
            resolve();
          };
          script.onerror = function(e) {
            reject(e.toString());
          };
          document.body.appendChild(script);
        });
      }
      React.useEffect(() => {
        logger(`init... (Logs won't appear in production env)`);
        if (!isClient) {
          logger(`server detected! Skipping script loading...`);
          return;
        }
        setIsLoading(true);
        if (!checkScriptLoaded()) {
          logger(`loading script: https://checkout.razorpay.com/v1/checkout.js`);
          loadScript("https://checkout.razorpay.com/v1/checkout.js").then(() => {
            logger(`script loaded success..`);
            setError(void 0);
          }).catch((err) => {
            logger(`script loading error`, err);
            if (err instanceof Error) {
              setError(err.message);
            } else {
              setError(`Unknown Error`);
            }
          }).finally(() => setIsLoading(false));
        }
      }, []);
      return { error, isLoading, Razorpay: razorpay_1.default };
    };
    exports.useRazorpay = useRazorpay;
  }
});
export default require_dist();
//# sourceMappingURL=react-razorpay.js.map
